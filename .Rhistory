g + geom_point(aes(color = drv)) + theme_bw(base_family = "Times")
plot(myx, myy, type = "l", ylim = c(-3,3))
g <- ggplot(testdata, aes(myx, myy))
g <- ggplot(data =testdata, aes(myx, myy))
g <- ggplot(data =testdat, aes(myx, myy))
g + geom_point()
g + geom_line()
g + geom_line()+ylim(-3,3)
g + geom_line() + coord_cartesian(ylim = c(-3,3))
g <- ggplot(data = mpg, aes(displ, hwy, color = factor(year)))
g + geom_point()
g + geom_point() + facet_grid(drv~cyl, set = TRUE)
g + geom_point() + facet_grid(drv~cyl, margins = TRUE)
g + geom_point() + facet_grid(drv~cyl, margins = TRUE) + geom_smooth(method = "lm", se = FALSE, size = 2, color == "black")
g + geom_point() + facet_grid(drv~cyl, margins = TRUE) + geom_smooth(method = "lm", se = FALSE, size = 2, color = "black")
g + geom_point() + facet_grid(drv~cyl, margins = TRUE) + geom_smooth(method = "lm", se = FALSE, size = 2, color = "black") + labs(x= "Displacement", y = "Highway Mileage", title)
g + geom_point() + facet_grid(drv~cyl, margins = TRUE) + geom_smooth(method = "lm", se = FALSE, size = 2, color = "black") + labs(x= "Displacement", y = "Highway Mileage", title= "Swirl Rules!")
str(diamonds)
qplot(price, data = diamonds)
range(diamonds$price)
qplot(price, data = diamonds, binwidth = 18497/30)
brk
counts
qplot(price, data = diamonds, binwidth = 18497/30, fill = cut)
qplot(price, data = diamonds, geom = "density")
qplot(price, data = diamonds, geom = "density", color = cut)
qplot(carat, price, data = diamonds)
qplot(carat, price, data = diamonds, shape = cut)
qplot(carat, price, data = diamonds, color = cut)
qplot(carat, price, data = diamonds, color = cut, geom_smooth(method = "lm"))
qplot(carat,price,data=diamonds, color=cut) + geom_smooth(method="lm")
qplot(carat,price,data=diamonds, color=cut, facets = .~cut) + geom_smooth(method="lm")
g <- ggplot( data = diamonds, aes(depth, price))
summary (g)
g + geom_point(alpah = 1/3)
g+geom_point(alpha=1/3)
cutpoints <- quantile(diamonds$carat, seq(0,1, len = 4), na.rm = TRUE)
cutpoints
daimonds$car2 <- cut(diamonds$carat, cutpoints)
diamonds$car2 <- cut(diamonds$carat, cutpoints)
g <- ggplot(diamonds, eas(depth, price))
g <- ggplot(diamonds, aes(depth, price))
g + geom_point(alpha = 1/3) + facet_grid(cut ~ car2)
diamonds[myd,]
g + geom_point(alpha = 1/3) + facet_grid(cut ~ car2) + geom_smooth(method = "lm", size = 3, color = "pink")
ggplot(diamonds, aes(carat, price)) + geom_boxplot() + facet_grid(.~cut)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
?lattice
library(datasets)
data(airquality)
str(airquality)
library(swirl)
swirl()
dist(dataFrame)
hc <- hclust(distxy)
plot(hc)
plot(as.dendogram(hc))
plot(as.dendrogram(hc))
abline(h= 1.5, col = "blue")
abline(h= 0.4, col = "red")
5
9
12
abline(h= 0.05, col = "green")
dist(dFsm)
hc
heatmap(dataMatrix, col = cm.colors(25))
heatmap(mt)
mt
plot(denmt)
distmt
cmat
points(cx, cy, col = c("red", "orange", "purple"), pch =3, cex = 2, lwd = 2)
mdist(x, y, cx, cy)
apply(distTmp, 2, which.min)
points(x, y, pch = 19, cex = 2, col = cols1[newClust])
tapply(x, newClust, mean)
tapply(y, newClust, mean)
points(newCx, newCy, pch = 8, cex = 2, col = cols1, lwd = 2)
points(newCx,newCy,col=cols1,pch=8,cex=2,lwd=2)
mdist(x, y, newCx, newCy)
apply(distTmp2, 2, which.min)
points(x, y, pch = 19, cex = 2, col = cols1[newClust2])
tapply(x, newClust2, mean)
tapply(y, newClust2, mean)
points(finalCx,finalCy,col=cols1,pch=9,cex=2,lwd=2)
kmeans(dataFrame, centers = 3)
kmObj$iter
plot(x, y, col = kmObj$cluster, pch = 19, cex = 2)
points(kmObj$centers, col = c("black", "red", "green"), pch = 3, cex = 3, lwd = 3)
plot(x, y, col = kmeans(dataFrame,6)$cluster, pch = 19, cex = 2)
plot(x, y, col = kmeans(dataFrame,6)$cluster, pch = 19, cex = 2)
plot(x, y, col = kmeans(dataFrame,6)$cluster, pch = 19, cex = 2)
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
source("addPatt.R", local = TRUE)
heatmap(dataMatrix)
mat
svd(mat)
matu %*% t(matv)
matu %*% diag %*% t(matv)
svd(scale(mat))
prcomp(scale(mat))
svd1$v[,1]
svd1$d
head(constantMatrix)
svd2$d
svd2$v[,1:2]
svd2$d
dim(faceData)
a1 <- (svd1$u[,1]*svd1$d1) %*% t(svd1$v[,1])
a1 <- (svd1$u[,1] * svd1$d[1]) %*% t(svd1$v[,1])
myImage(a1)
a2 <- svd1$u[,1:2] %*% svd1$d[1:2] %*% t(svd1$v[,1:2])
a2 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
myImage(a2)
a2 <- svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5])
myImage(a2)
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
library(swirl)
swirl()
dim(ssd)
names(ssd[,562:563])
table(ssd$subject)
sum(table(ssd$subject))
table(ssd$activity)
sub1 <- subset(ssd, subject == 1)
dim(sub1)
names(sub1[,1:12])
myedit("showXY.R")
showMe(1:6)
mdist <- dist(sub1[,1:3])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
mdist <- dist(sub1[,10:12])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
svd1 <- svd(scale(sub1[,-c(562,563)]))
dim(svd1$u)
maxCon <- which.max(svd1$v)
maxCon <- which.max(svd1$v[,2])
mdist <- dist(c(sub1[,10:12], maxCon))
mdist <- dist(cbind(sub1[,10:12], maxCon))
mdist <- dist(sub1[,c(10:12,maxCon)])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
names(sub1[maxCon])
kClust <- kmeans(sub1[,-c(562,563)], centers = 6)
table(kClust$cluster, sub1$activity)
kClust <- kmeans(sub1[,-c(562,563)], centers = 6, nstart = 100)
table(kClust$cluster, sub1$activity)
dim(kClust$centers)
laying <- which(kClust$size==29)
plot(kClust$centers[laying,1:12], pch = 19, ylab = "Laying cluster")
Type plot(kClust$centers[laying, 1:12],pch=19,ylab="Laying Cluster")
plot(kClust$centers[laying, 1:12],pch=19,ylab="Laying Cluster")
names(sub1[,1:3])
walkdown <- which(kClust$size==49)
plot(kClust$centers[walkdown,1:12], pch=19, ylab = "Walkdown Cluster")
library(swirl)
swirl()
dim(pm0)
head(pm0)
cnames
cnames <- strsplit(cnames, "|", fixed = TRUE)
cnames
names(pm0) <- cnames[[1]][wcol]
names(pm0) <- make.names(cnames[[1]][wcol])
head(pm0)
x0 <- pm0$Sample.Value
str(x0)
mean(is.na(x0))
names(pm1) <- make.names(cnames[[1]][wcol])
dim(pm1)
x1 <- pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0,x1)
boxplot(log10(x0),lo10(x1))
boxplot(log10(x0),log10(x1))
negative <- x1<0
sum(negative, na.rm = TRUE)
mean(negative, na.rm = TRUE)
dates <- pm1$Date
str(dates)
dates <- as.Date(as.character(dates), "%Y%m%d")
head(dates)
hist(dates[negative], "month")
str(site0)
both <- intersect(site0, site1)
both
head(pm0)
cnt0 <- subset(pm0, pm0$State.Code == 36 & pm0$county.site %in% both)
cnt0 <- subset(pm0, State.Code == 36 & county.site %in% both)
cnt1 <- subset(pm1, State.Code == 36 & county.site %in% both)
sapply(split(cnt0, cnt0$county.site), nrow)
sapply(split(cnt1, cnt1$county.site), nrow)
pmOsub <- subset(cnt0, County.Code == 63 & Site.ID == 2008)
pm0sub <- subset(cnt0, County.Code==63 & Site.ID==2008)
pm1sub <- subset(cnt1, County.Code==63 & Site.ID==2008)
x0sub <- pm0sub$Sample.Value
x1sub <- pm1sub$Sample.Value
dates0 <- as.Date(as.character(pm0sub$Date), "%Y%m%d")
dates1 <- as.Date(as.character(pm1sub$Date), "%Y%m%d")
par(mfrow = c(1,2), mar = c(4,4,2,1))
plot(dates0, x0sub, pch = 20)
abline(median(x0sub, na.rm = TRUE), lwd = 2)
abline( median(x0sub, na.rm = TRUE), lwd = 2)
abline(median(x0sub, na.rm = TRUE), lwd = 2)
abline(median(x0sub, na.rm = TRUE), lwd=2)
?abline
abline(h = median(x0sub, na.rm = TRUE), lwd=2)
plot(dates1, x1sub, pch = 20)
abline(h = median(x1sub, na.rm = TRUE), lwd=2)
rng <- range(x0sub, x1sub, na.rm = TRUE)
rng
mnO <- with(pm0, tapply(Sample.Value, State.Code, mean, na.rm = TRUE))
mn0 <- with(pm0,tapply(Sample.Value,State.Code,mean,na.rm=TRUE))
str(mnO)
str(mn0)
mn1 <- with(pm1,tapply(Sample.Value,State.Code,mean,na.rm=TRUE))
str(mn1)
summary(mn0)
summary(mn1)
d0 <- data.frame(state = names(mnO), mean = mnO)
d0 <- data.frame(state = names(mn0), mean = mn0)
d1 <- data.frame(state = names(mn1), mean = mn1)
mrg <- merge(d0, d1, by = "State")
mrg <- merge(d0, d1, by = "state")
dim(mrg)
head(mrg)
with(mrg, plot(rep(1,52), mrg[,2], xlim = c(.5, 2.5)))
with(mrg, points(rep(2,52), mrg[,3])
with(mrg, points(rep(2,52), mrg[,3]))
segments(rep(1,52), mrg[,2], rep(2,52), mrg[,3])
mrg[mrg$mean.x < mrg$mean.y, ]
setwd("D:/Git_Coursera/RepData_PeerAssessment1")
df <- read.csv("activity.zip", header = TRUE, sep = ",")
df <- read.csv(unz("activity.zip", "activity.csv"), header = TRUE, sep = ",")
install.packages("readr")
library("readr")
df <- read.csv("activity.csv.zip", header = TRUE, sep = ",")
df <- read.csv("activity.zip", header = TRUE, sep = ",")
?unzip
df <- read.csv(unzip("activity.zip"), header = TRUE, sep = ",")
df <- read.csv(unzip("activity.zip"), header = TRUE, sep = ",")
View(df)
library("dplyr")
library("ggplot2")
a <- df %>%
group_by(date) %>%
summarise(sum = sum(steps, na.rm = TRUE))
ggplot(data = a, aes(date, sum)) +
geom_bar(stat = "identity") +
labs(title = "Evolution of total number of steps taken each day") +
theme(plot.title = element_text(hjust = 0.5)) +
scale_x_discrete(limits = c(min(a$date), max(a$date)))
ggplot(data = a, aes(date, sum)) +
geom_bar(stat = "identity") +
labs(title = "Evolution of total number of steps taken each day") +
theme(plot.title = element_text(hjust = 0.5)) +
scale_x_discrete(limits = c(min(as.character(a$date)), max(as.character(a$date))))
ggplot(data = a, aes(date, sum)) +
geom_bar(stat = "identity") +
labs(title = "Evolution of total number of steps taken each day") +
theme(plot.title = element_text(hjust = 0.5)) +
scale_x_discrete(breaks = waiver())
View(a)
a$date[[1]]
a$date[[2]]
ggplot(data = a, aes(date, sum)) +
geom_bar(stat = "identity") +
labs(title = "Evolution of total number of steps taken each day") +
theme(plot.title = element_text(hjust = 0.5)) +
scale_x_discrete(breaks = c(a$date[[c(1,11,21,31,41,51,61)]]) )
ggplot(data = a, aes(date, sum)) +
geom_bar(stat = "identity") +
labs(title = "Evolution of total number of steps taken each day") +
theme(plot.title = element_text(hjust = 0.5)) +
scale_x_discrete(breaks = c(a$date[[1]],a$date[[11]], a$date[[21]], a$date[[31]], a$date[[41]], a$date[[51]], a$date[[61]]) )
ggplot(data = a, aes(date, sum)) +
geom_bar(stat = "identity") +
labs(title = "Evolution of total number of steps taken each day") +
theme(plot.title = element_text(hjust = 0.5)) +
theme(axis.text.x = element_text(angle = 45))
ggplot(data = a, aes(date, sum)) +
geom_bar(stat = "identity") +
labs(title = "Evolution of total number of steps taken each day") +
theme(plot.title = element_text(hjust = 0.5)) +
theme(axis.text.x = element_text(angle = 45)) +
scale_x_discrete(breaks = c(as.character(a$date[[1]]), as.character(a$date[[11]]), as.character(a$date[[21]]), as.character(a$date[[31]]), as.character(a$date[[41]]), as.character(a$date[[51]]), as.character(a$date[[61]])))
ggplot(data = a, aes(date, sum)) +
geom_bar(stat = "identity") +
labs(title = "Evolution of total number of steps taken each day") +
theme(plot.title = element_text(hjust = 0.5)) +
scale_x_discrete(breaks = c(as.character(a$date[[1]]), as.character(a$date[[11]]), as.character(a$date[[21]]), as.character(a$date[[31]]), as.character(a$date[[41]]), as.character(a$date[[51]]), as.character(a$date[[61]])))
View(a)
ggplot(data = a, aes(date, sum)) +
geom_bar(stat = "identity") +
labs(title = "Evolution of total number of steps taken each day") +
theme(plot.title = element_text(hjust = 0.5)) +
scale_x_discrete(breaks = c(as.character(a$date[[1]]), as.character(a$date[[11]]), as.character(a$date[[21]]), as.character(a$date[[31]]), as.character(a$date[[41]]), as.character(a$date[[51]]), as.character(a$date[[61]])))
ggsave("plot1.png", path = "D:\\Git_Coursera\\RepData_PeerAssessment1\\instructions_fig", device = "png")
View(a)
ggplot(data = a, aes(date, sum)) +
geom_bar(stat = "identity") +
labs(title = "Evolution of total number of steps taken each day") +
theme(plot.title = element_text(hjust = 0.5), plot.margin = unit(c(1,2,1,2), "cm")) +
scale_x_discrete(breaks = c(as.character(a$date[[1]]), as.character(a$date[[11]]), as.character(a$date[[21]]), as.character(a$date[[31]]), as.character(a$date[[41]]), as.character(a$date[[51]]), as.character(a$date[[61]])))
ggplot(data = a, aes(date, sum)) +
geom_bar(stat = "identity") +
labs(title = "Evolution of total number of steps taken each day") +
theme(plot.title = element_text(hjust = 0.5), plot.margin = unit(c(0.5,1.5,0.5,1.5), "cm")) +
scale_x_discrete(breaks = c(as.character(a$date[[1]]), as.character(a$date[[11]]), as.character(a$date[[21]]), as.character(a$date[[31]]), as.character(a$date[[41]]), as.character(a$date[[51]]), as.character(a$date[[61]])))
ggplot(data = a, aes(date, sum)) +
geom_bar(stat = "identity") +
labs(title = "Evolution of total number of steps taken each day") +
theme(plot.title = element_text(hjust = 0.5), plot.margin = unit(c(0.5,1,0.5,1), "cm")) +
scale_x_discrete(breaks = c(as.character(a$date[[1]]), as.character(a$date[[11]]), as.character(a$date[[21]]), as.character(a$date[[31]]), as.character(a$date[[41]]), as.character(a$date[[51]]), as.character(a$date[[61]])))
ggplot(data = a, aes(date, sum)) +
geom_bar(stat = "identity") +
labs(title = "Evolution of total number of steps taken each day") +
theme(plot.title = element_text(hjust = 0.5), plot.margin = unit(c(0.5,1,0.5,1), "cm")) +
scale_x_discrete(breaks = c(as.character(a$date[[1]]), as.character(a$date[[11]]), as.character(a$date[[21]]), as.character(a$date[[31]]), as.character(a$date[[41]]), as.character(a$date[[51]]), as.character(a$date[[61]])))
ggsave("plot1.png", path = "D:\\Git_Coursera\\RepData_PeerAssessment1\\instructions_fig", device = "png")
b <- df %>%
group_by(interval) %>%
summarise(average = mean(steps, na.rm = TRUE))
plot(b, type = "l")
plot(b, type = "l", ylab = "Average number of steps taken", xlab = "Time interval")
title(main = "Average daily activity pattern")
png(file = "D:\\Git_Coursera\\RepData_PeerAssessment1\\instructions_fig\\plot 2.png")
plot(b, type = "l", ylab = "Average number of steps taken", xlab = "Time interval")
title(main = "Average daily activity pattern")
dev.off()
View(b)
time_interval <- b$interval[[which(max(b$average))]]
?which
time_interval <- b$interval[[which(b$average == max(b$average))]]
time_interval
View(df)
nb_NA <- sum(is.na(df$steps))
View(a)
b <- df %>%
group_by(interval) %>%
summarise(mean = mean(steps, na.rm = TRUE))
View(b)
time_interval <- b$interval[[which(b$mean == max(b$mean))]]
print(time_interval)
length(df)
dim(df)
dim(df)[[1]]
df$steps[1]
df$steps[150]
df$steps[1000]
df$steps[3000]
df$steps[10000]
df$steps[15000]
df$steps[5000]
b$interval[1]
b$interval[[1]]
for (i in 1: dim(df)[[1]]) {
if(is.na(df$steps[i]) == TRUE) {
df$steps[i] <- b$mean[which(df$interval[i] == b$interval)]
}
}
View(df)
df <- read.csv(unzip("activity.zip"), header = TRUE, sep = ",")
View(df)
?data_frame
class(df$steps)
for (i in 1: dim(df)[[1]]) {
if(is.na(df$steps[i]) == TRUE) {
newrow <- data.frame(steps = b$mean[which(df$interval[i] == b$interval)], date = df$date[i], interval = df$interval[i])
df_new <- rbind(df_new,newrow)
} else {
newrow <- data.frame(steps = df$steps[i], date = df$date[i], interval = df$interval[i])
df_new <- rbind(df_new,newrow)
}
}
df_new <- data.frame(steps = numeric(), date = factor(), interval = integer() )
for (i in 1: dim(df)[[1]]) {
if(is.na(df$steps[i]) == TRUE) {
newrow <- data.frame(steps = b$mean[which(df$interval[i] == b$interval)], date = df$date[i], interval = df$interval[i])
df_new <- rbind(df_new,newrow)
} else {
newrow <- data.frame(steps = df$steps[i], date = df$date[i], interval = df$interval[i])
df_new <- rbind(df_new,newrow)
}
}
View(df_new)
c <- df_new %>%
group_by(date) %>%
summarise(sum = sum(steps))
ggplot(data = c, aes(date, sum)) +
geom_bar(stat = "identity") +
labs(title = "Evolution of total number of steps taken each day") +
theme(plot.title = element_text(hjust = 0.5), plot.margin = unit(c(0.5,1,0.5,1), "cm")) +
scale_x_discrete(breaks = c(as.character(c$date[[1]]), as.character(c$date[[11]]), as.character(c$date[[21]]), as.character(c$date[[31]]), as.character(c$date[[41]]), as.character(c$date[[51]]), as.character(c$date[[61]])))
View(c)
mean_steps_new <- mean(c$sum)
median_steps_new <- median(c$sum)
print(mean_steps_new)
print(median_steps_new)
mean_steps <- mean(a$sum)
median_steps <- median(a$sum)
ggplot(data = c, aes(date, sum)) +
geom_bar(stat = "identity") +
labs(title = "Evolution of total number of steps taken each day") +
theme(plot.title = element_text(hjust = 0.5), plot.margin = unit(c(0.5,1,0.5,1), "cm")) +
scale_x_discrete(breaks = c(as.character(c$date[[1]]), as.character(c$date[[11]]), as.character(c$date[[21]]), as.character(c$date[[31]]), as.character(c$date[[41]]), as.character(c$date[[51]]), as.character(c$date[[61]])))
ggsave("plot3.png", path = "D:\\Git_Coursera\\RepData_PeerAssessment1\\instructions_fig", device = "png")
?weekdays
weekdays(df$date[1])
as.Date(df$date[1])
weekdays(as.Date(df$date[1]))
?factor
class(weekdays(as.Date(df$date[1])))
week
library("lubricate")
library("lubridate")
wday()
?wday
wday()
weekdays(day)
Sys.setlocale("LC_TIME", "English")
weekdays(as.Date(df$date[1]))
for (i in 1:dim(df_new)[[1]]) {
if(any(weekdays(as.Date(df_new$date[i])) == c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday"))) {
df_new$weektime[i] <- "weekday"
} else {
df_new$weektime[i] <- "weekend"
}
}
View(df_new)
class(df_new$weektime)
d <- factor(df_new$weektime)
df_new$weektime <- factor(df_new$weektime)
class(df_new$weektime)
?group_by
d <- df-new %>%
group_by(interval, weektime) %>%
summarise(mean = mean(steps))
d <- df-new %>%
group_by(interval, as.character(weektime)) %>%
summarise(mean = mean(steps))
d <- df_new %>%
group_by(interval, weektime) %>%
summarise(mean = mean(steps))
View(d)
ggplot(d, aes(interval, mean)) +
geom_line() +
facet_grid(weektime~.)
ggplot(d, aes(interval, mean)) +
geom_line() +
facet_grid(weektime~.) +
labs( title = "Average daily activity in weekdays and weekend", x = "Mean number of steps", y = "Time interval")
ggplot(d, aes(interval, mean)) +
geom_line() +
facet_grid(weektime~.) +
labs( title = "Average daily activity in weekdays and weekend", x = "Mean number of steps", y = "Time interval") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(d, aes(interval, mean)) +
geom_line() +
facet_grid(weektime~.) +
labs( title = "Average daily activity in weekdays and weekend", y = "Mean number of steps", x = "Time interval") +
theme(plot.title = element_text(hjust = 0.5))
gplot(d, aes(interval, mean)) +
geom_line() +
facet_wrap(weektime~.) +
labs( title = "Average daily activity in weekdays and weekend", y = "Mean number of steps", x = "Time interval") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(d, aes(interval, mean)) +
geom_line() +
facet_wrap(weektime~.) +
labs( title = "Average daily activity in weekdays and weekend", y = "Mean number of steps", x = "Time interval") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(d, aes(interval, mean)) +
geom_line() +
facet_wrap(weektime~.)
ggplot(d, aes(interval, mean)) +
geom_line() +
facet_wrap(~weektime) +
labs( title = "Average daily activity in weekdays and weekend", y = "Mean number of steps", x = "Time interval") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(d, aes(interval, mean)) +
geom_line() +
facet_wrap(~weektime, nrow = 2, ncol = 1) +
labs( title = "Average daily activity in weekdays and weekend", y = "Mean number of steps", x = "Time interval") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(d, aes(interval, mean)) +
geom_line() +
facet_wrap(~weektime, nrow = 2, ncol = 1) +
labs( title = "Average daily activity in weekdays and weekend", y = "Mean number of steps", x = "Time interval") +
theme(plot.title = element_text(hjust = 0.5))
ggsave("plot4.png", path = "D:\\Git_Coursera\\RepData_PeerAssessment1\\instructions_fig", device = "png")
library("dplyr")
library("ggplot2")
df <- read.csv(unzip("activity.zip"), header = TRUE, sep = ",")
b <- df %>%
group_by(interval) %>%
summarise(mean = mean(steps, na.rm = TRUE))
plot(b, type = "l", ylab = "Average number of steps taken", xlab = "Time interval")
title(main = "Average daily activity pattern")
dev.copy(png, file = "D:\\Git_Coursera\\RepData_PeerAssessment1\\instructions_fig\\plot 2.png")
dev.off()
time_interval <- b$interval[which(b$mean == max(b$mean))]
